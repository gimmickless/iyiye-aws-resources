# Q U E R I E S
type Query
  @aws_iam
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  userBasicInfo(username: String!): User
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  
  
  inAppNotificationList(
    username: String!
    limit: Int
    offset: Int
  ): [InAppNotification]
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  kitCategoryList(): [KitCategory]

  curatedKitList(username: String!, limit: Int, offset: Int): [Kit]

  faveKitList(username: String!, limit: Int, offset: Int): [Kit]

  recentlyOrderedKitList(username: String!, limit: Int, offset: Int): [Kit]

  newlyAddedKitList(limit: Int, offset: Int): [Kit]

  kit(id: ID!): Kit
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  kitList(): [Kit]
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  order(id: ID!): Order
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  orderList(username: String!, limit: Int, offset: Int): [Order]
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])
}

# M U T A T I O N S
type Mutation @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  createInAppNotification(
    input: CreateInAppNotificationInput!
  ): InAppNotification
    @aws_cognito_user_pools(cognito_groups: ["iyiye-admin-ug"])

  updateInAppNotificationsForUserAsRead(
    input: UpdateInAppNotificationsForUserAsReadInput!
  ): InAppNotification

  # Kit
  createKit(input: CreateKitInput!): Kit
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  approveKit(input: ApproveKitInput!): Kit
    @aws_cognito_user_pools(cognito_groups: ["iyiye-admin-ug"])

  # Cart
  updateCart(input: UpdateCartInput!): Cart
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  checkout(username: String!): Boolean
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  # Payment
  completePayment(username: String!): Boolean
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  # Order
  createOrder(input: CreateOrderInput!): Order
    @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"])

  updateOrderStatus(orderId: String, status: OrderStatus): Order
    @aws_cognito_user_pools(cognito_groups: ["iyiye-admin-ug"])

}

# S U B S C R I P T I O N S
type Subscription
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  onCreateInAppNotification: InAppNotification
    @aws_subscribe(mutations: ["createInAppNotification"])
  onUpdateInAppNotificationsForUserAsRead: InAppNotification
    @aws_subscribe(mutations: ["updateInAppNotificationsForUserAsRead"])
}

# I N P U T
input CreateInAppNotificationInput
  @aws_cognito_user_pools(cognito_groups: ["iyiye-admin-ug"]) {
  type: InAppNotificationType
  receiverUsername: String!
  body: String
}

input UpdateInAppNotificationsForUserAsReadInput
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  receiverUsername: String!
}

input CreateKitInput
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  name: String!
  version: String
  description: String
  authorUsername: ID
  cuisineCountryCode: String
  diets: String # Comma-separated list
  recipe: String!
  price: Float!
  calorie: Int
  prepTime: Int! # Minutes
}

input ApproveKitInput
  @aws_cognito_user_pools(cognito_groups: ["iyiye-admin-ug"]) {
  id: ID!
  approverUsername: ID
}

input UpdateCartInput
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  username: String!
  kitId: ID!
  quantity: Int!
}

input CreateOrderInput
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  username: String!
  orderItemList: [OrderItem]!
  totalPrice: Float!
}

# T Y P E S

type User
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  username: String!
  picture: AWSURL
  bio: String
  contactable: Boolean
  identityId: String
}

type InAppNotification
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  id: ID!
  type: InAppNotificationType
  receiverUsername: String!
  body: String
  isRead: Boolean!
  createdTime: AWSDateTime!
  lastUpdatedTime: AWSDateTime!
}

type KitCategory
  @aws_iam
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  id: ID!
  name: String!
  imageUrl: AWSURL
}

type Kit
  @aws_iam
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  id: ID!
  name: String!
  version: String
  description: String
  authorUsername: ID
  author: User
  approved: Boolean
  cuisineCountryCode: String
  diets: String # Comma-separated list
  recipe: String!
  price: Float!
  calorie: Int
  prepTime: Int! # Minutes
  proposeTime: AWSTimestamp
  approverUsername: ID
  approveTime: AWSTimestamp
  lastUpdaterUsername: ID!
  lastUpdateTime: AWSTimestamp!
}

type Order
  @aws_iam
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  id: ID!
  username: String!
  orderItems: [OrderItem]
  totalPrice: Float!
  status: OrderStatus 
  createdTime: AWSDateTime!
  lastUpdatedTime: AWSDateTime!
}

type OrderItem
  @aws_iam
  @aws_cognito_user_pools(cognito_groups: ["iyiye-default-ug"]) {
  id: ID!
  kitId: ID!
  quantity: Int!
}

# E N U M S

enum InAppNotificationType {
  announcement
  promotion
  report
  comment
  star
  flag
}

enum OrderStatus {
  pending
  approved
  completed
}

enum IngredientUnit {
  gram
  liter
  piece
  bunch
  slice
  clove
}

enum SQLOrderDirection {
  ASC
  DESC
}
